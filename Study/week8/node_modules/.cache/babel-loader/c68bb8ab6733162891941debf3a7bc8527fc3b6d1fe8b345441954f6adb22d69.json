{"ast":null,"code":"var _jsxFileName = \"/Users/sehyeounkim/Web-1/week08/Hash/weather/src/weather.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather() {\n  _s();\n  const mykey = \"7d30aeead897238c24c8dd4f72337978\";\n  const [cityname, setCityname] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  //const Weatherapi = `https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={mykey}`;\n\n  const GetLocation = async () => {\n    try {\n      const response = await fetch(`http://api.openweathermap.org/geo/1.0/direct?q=${cityname}&appid=${mykey}`);\n      const citydata = await response.parse();\n      return citydata;\n    } catch (error) {\n      setError(error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    GetLocation();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"\\uB3C4\\uC2DC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n      value: cityname,\n      onChange: e => {\n        setCityname(e.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n}\n_s(Weather, \"Yi1DpXudgCMxki0CA1yRFXzQkz0=\");\n_c = Weather;\nvar _c;\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","Weather","_s","mykey","cityname","setCityname","loading","setLoading","error","setError","GetLocation","response","fetch","citydata","parse","children","type","placeholder","value","onChange","e","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/sehyeounkim/Web-1/week08/Hash/weather/src/weather.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\n\nexport default function Weather() {\n    const mykey = \"7d30aeead897238c24c8dd4f72337978\";\n    const [cityname, setCityname] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    \n    //const Weatherapi = `https://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={mykey}`;\n\n    const GetLocation = async() => {\n        try{\n            const response = await fetch(\n                `http://api.openweathermap.org/geo/1.0/direct?q=${cityname}&appid=${mykey}`\n            );\n            const citydata = await response.parse();\n            return citydata;\n\n        } catch (error) {\n            setError(error);\n        } finally {\n            setLoading(false);\n        }\n    }\n    useEffect(() => {\n        GetLocation();\n    }, []);\n    return (\n        <div>\n            <input type=\"text\" placeholder=\"도시를 입력하세요\" value={cityname} onChange={e => {setCityname(e.value)\n            }}></input>\n        </div>\n    );\n}"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG5C,eAAe,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAMC,KAAK,GAAG,kCAAkC;EAChD,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAGxC;;EAEA,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAW;IAC3B,IAAG;MACC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACvB,kDAAiDR,QAAS,UAASD,KAAM,EAC9E,CAAC;MACD,MAAMU,QAAQ,GAAG,MAAMF,QAAQ,CAACG,KAAK,CAAC,CAAC;MACvC,OAAOD,QAAQ;IAEnB,CAAC,CAAC,OAAOL,KAAK,EAAE;MACZC,QAAQ,CAACD,KAAK,CAAC;IACnB,CAAC,SAAS;MACND,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EACDV,SAAS,CAAC,MAAM;IACZa,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;EACN,oBACIV,OAAA;IAAAe,QAAA,eACIf,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC,mDAAW;MAACC,KAAK,EAAEd,QAAS;MAACe,QAAQ,EAAEC,CAAC,IAAI;QAACf,WAAW,CAACe,CAAC,CAACF,KAAK,CAAC;MAChG;IAAE;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEd;AAACtB,EAAA,CAhCuBD,OAAO;AAAAwB,EAAA,GAAPxB,OAAO;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}